<languageVersion : 1.0;>

kernel PolarToCartesian
<   namespace : "com.quasimondo";
    vendor : "Mario Klingemann";
    version : 1;
    description : "Polar to Cartesian Mapper";
>
{
    input image4 src;
    output pixel4 dst;
    
    parameter float2 dimensions
    <
        minValue: float2(1.0,1.0);
        maxValue: float2(2000.0,2000.0);
        defaultValue: float2(603.0,273.0);
    >;
    
     parameter float angleFactor
    <
        minValue: 0.0;
        maxValue: 2.0;
        defaultValue: 1.0;
    >;

    void
    evaluatePixel()
    {
        float2 d = dimensions * 0.5 - outCoord(); 
        float x = dimensions.x * 0.5 + (( atan(d.y, d.x ) / angleFactor ) / 3.14159265 ) * dimensions.x * 0.5;
        float y = length( d ) /  length( dimensions * 0.5 ) * dimensions.y;
        dst = sampleLinear(src,float2( x,y ) );
        
    }
    
        
}
